To make your Python GUI application executable and run it as a standalone application in Linux (Ubuntu), you can follow these steps:
1. Install Required Packages

First, ensure that you have all necessary packages installed, including the one for creating executables from Python scripts. The most common package for this purpose is PyInstaller.

You can install PyInstaller using pip:


code in bash

---pip install pyinstaller




2. Prepare Your Python Script

Ensure that your Python script is working correctly and doesn't rely on any non-standard or non-packaged files.
3. Create an Executable with PyInstaller

Use PyInstaller to generate an executable from your Python script. You can do this by running the following command in the terminal:

code in bash

---pyinstaller --onefile --windowed your_script.py

    --onefile: This option bundles everything into a single executable file.
    --windowed: This option ensures that no console window appears when you run the GUI application (useful for GUI applications).

For example, if your script is named script_runner.py, you would run:


code for bash

---pyinstaller --onefile --windowed script_runner.py


4. Locate the Executable

After running the above command, PyInstaller will create a dist directory in the same location as your script. Inside the dist directory, you will find your executable file (your_script or script_runner in our example).




5. Make the Executable Portable (Optional)

If you want to distribute the application, ensure all dependencies are included, or specify hidden imports in your .spec file. PyInstaller usually handles most dependencies, but if you encounter issues, you can tweak the .spec file generated by PyInstaller.
6. Running the Executable

To run the executable, navigate to the dist directory and execute the file:

code for bash

---./your_script

7. Create a Desktop Entry (Optional)

To make your application easily accessible like other apps, you can create a desktop entry:

    Create a .desktop file, e.g., myapp.desktop:

bash

nano ~/.local/share/applications/myapp.desktop

    Add the following content to the file:

ini

[Desktop Entry]
Name=MyApp
Comment=My Python GUI Application
Exec=/path/to/your/dist/your_script
Icon=/path/to/icon.png
Terminal=false
Type=Application
Categories=Utility;

Replace /path/to/your/dist/your_script with the actual path to your executable and /path/to/icon.png with the path to an icon if you have one.

    Save the file and make it executable:

bash

chmod +x ~/.local/share/applications/myapp.desktop

Now, your application should appear in the application launcher, and you can run it like any other application.
8. Distribute Your Application

You can now distribute the dist/your_script executable file, along with any necessary resources (like the icon), to other users who can run it on their Linux systems without needing to install Python or any dependencies.
Summary

By following these steps, you can convert your Python GUI application into a standalone executable that can be run on Ubuntu and other Linux distributions. Using PyInstaller simplifies the process, allowing you to package everything into a single file that users can run without worrying about dependencies.
